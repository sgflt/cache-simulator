package cz.zcu.kiv.cacheSimulator.gui.configuration;

import cz.zcu.kiv.cacheSimulator.cachePolicies.MQ;

/**
 *
 * @author Pavel Bzoch
 * Trida pro nastaveni MQ policy
 */
@SuppressWarnings("serial")
public class MQPanel extends javax.swing.JPanel {

    /**
     * Creates new form MQPanel
     */
    public MQPanel() {
        initComponents();
        qoutSpinner.setValue(MQ.getQOUT_CAPACITY());
        timeSpinner.setValue(MQ.getLIFE_TIME());
        queueCountSpinner.setValue(MQ.getQUEUE_COUNT());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        mqLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        qoutLabel = new javax.swing.JLabel();
        queueCountLabel = new javax.swing.JLabel();
        timeSpinner = new javax.swing.JSpinner();
        qoutSpinner = new javax.swing.JSpinner();
        queueCountSpinner = new javax.swing.JSpinner();

        mqLabel.setText("MQ settings");

        timeLabel.setText("Life time:");

        qoutLabel.setText("Out queue capacity:");

        queueCountLabel.setText("Queue count:");

        timeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(final javax.swing.event.ChangeEvent evt) {
                timeSpinnerStateChanged(evt);
            }
        });

        qoutSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(final javax.swing.event.ChangeEvent evt) {
                qoutSpinnerStateChanged(evt);
            }
        });

        queueCountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(final javax.swing.event.ChangeEvent evt) {
                queueCountSpinnerStateChanged(evt);
            }
        });

        final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(mqLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(queueCountLabel)
                            .addComponent(timeLabel)
                            .addComponent(qoutLabel))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(qoutSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(timeSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(queueCountSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(mqLabel)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(timeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qoutLabel)
                    .addComponent(qoutSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queueCountLabel)
                    .addComponent(queueCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void timeSpinnerStateChanged(final javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeSpinnerStateChanged
        if ((Integer)timeSpinner.getValue() <=0)
            timeSpinner.setValue(1);
        else if ((Integer)timeSpinner.getValue() > 500){
            timeSpinner.setValue(50);
        }
        MQ.setLIFE_TIME((Integer)timeSpinner.getValue());
    }//GEN-LAST:event_timeSpinnerStateChanged

    private void qoutSpinnerStateChanged(final javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_qoutSpinnerStateChanged
        if ((Integer)qoutSpinner.getValue() <=0)
            qoutSpinner.setValue(1);
        else if ((Integer)qoutSpinner.getValue() > 50){
            qoutSpinner.setValue(50);
        }
        MQ.setQOUT_CAPACITY((Integer)qoutSpinner.getValue());
    }//GEN-LAST:event_qoutSpinnerStateChanged

    private void queueCountSpinnerStateChanged(final javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_queueCountSpinnerStateChanged
        if ((Integer)queueCountSpinner.getValue() <=0)
            queueCountSpinner.setValue(1);
        else if ((Integer)queueCountSpinner.getValue() > 15){
            queueCountSpinner.setValue(15);
        }
        MQ.setQUEUE_COUNT((Integer)queueCountSpinner.getValue());
    }//GEN-LAST:event_queueCountSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel mqLabel;
    private javax.swing.JLabel qoutLabel;
    private javax.swing.JSpinner qoutSpinner;
    private javax.swing.JLabel queueCountLabel;
    private javax.swing.JSpinner queueCountSpinner;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JSpinner timeSpinner;
    // End of variables declaration//GEN-END:variables
}
